{"questions":{"1":{"codeB":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tString language;\n\tString code;\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\tif(tag instanceof ScriptTag){\n\t\tlanguage=((ScriptTag)tag).getLanguage();\n\t\tif((null != language) && (language.equalsIgnoreCase(\"JScript.Encode\") || language.equalsIgnoreCase(\"VBScript.Encode\"))){\n\t\t\tcode=ScriptDecoder.Decode(lexer.getPage(),lexer.getCursor());\n\t\t\t((ScriptTag)tag).setScriptCode(code);\n\t\t}\n\t}\n\tcontent=lexer.parseCDATA(!STRICT);\n\tposition=lexer.getPosition();\n\tnode=lexer.nextNode(false);\n\tif(null != node)\n\t\tif(!(node instanceof Tag) || !(((Tag)node).isEndTag() && ((Tag)node).getTagName().equals(tag.getIds()[0]))){\n\t\t\tlexer.setPosition(position);\n\t\t\tnode=null;\n\t\t}\n\tif(null == node){\n\t\tattribute=new Attribute(\"/script\",null);\n\t\tvector=new Vector();\n\t\tvector.addElement(attribute);\n\t\tnode=lexer.getNodeFactory().createTagNode(lexer.getPage(),position,position,vector);\n\t}\n\ttag.setEndTag((Tag)node);\n\tif(null != content){\n\t\ttag.setChildren(new NodeList(content));\n\t\tcontent.setParent(tag);\n\t}\n\tnode.setParent(tag);\n\ttag.doSemanticAction();\n\treturn (tag);\n}","codeA":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\tcontent=lexer.parseCDATA();\n\tposition=lexer.getPosition();\n\tnode=lexer.nextNode(false);\n\tif(null != node)\n\t\tif(!(node instanceof Tag) || !(((Tag)node).isEndTag() && ((Tag)node).getTagName().equals(tag.getIds()[0]))){\n\t\t\tlexer.setPosition(position);\n\t\t\tnode=null;\n\t\t}\n\tif(null == node){\n\t\tattribute=new Attribute(\"/style\",null);\n\t\tvector=new Vector();\n\t\tvector.addElement(attribute);\n\t\tnode=lexer.getNodeFactory().createTagNode(lexer.getPage(),position,position,vector);\n\t}\n\ttag.setEndTag((Tag)node);\n\tif(null != content){\n\t\ttag.setChildren(new NodeList(content));\n\t\tcontent.setParent(tag);\n\t}\n\tnode.setParent(tag);\n\ttag.doSemanticAction();\n\treturn (tag);\n}","method":0,"docB":"Scan for script. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","docA":"Scan for style definitions. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","type":"T2","Alternatives":["Method A mactches Description A, Mehtod B mactches Description B.","Method A mactches Description B, Mehtod A mactches Description B.","Impossible to decide."]},"2":{"codeB":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tString language;\n\tString code;\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\tcontent=lexer.parseCDATA(!STRICT);\n\tposition=lexer.getPosition();\n\tnode=lexer.nextNode(false);\n\tif(null != node)\n\t\tif(!(node instanceof Tag) || !(((Tag)node).isEndTag() && ((Tag)node).getTagName().equals(tag.getIds()[0]))){\n\t\t\tlexer.setPosition(position);\n\t\t\tnode=null;\n\t\t}\n\tif(null == node){\n\t\tattribute=new Attribute(\"/script\",null);\n\t\tvector=new Vector();\n\t\tvector.addElement(attribute);\n\t\tnode=lexer.getNodeFactory().createTagNode(lexer.getPage(),position,position,vector);\n\t}\n\ttag.setEndTag((Tag)node);\n\tif(null != content){\n\t\ttag.setChildren(new NodeList(content));\n\t\tcontent.setParent(tag);\n\t}\n\tnode.setParent(tag);\n\ttag.doSemanticAction();\n\treturn (tag);\n}","codeA":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\tcontent=lexer.parseCDATA();\n\tposition=lexer.getPosition();\n\tnode=lexer.nextNode(false);\n\tif(null != node)\n\t\tif(!(node instanceof Tag) || !(((Tag)node).isEndTag() && ((Tag)node).getTagName().equals(tag.getIds()[0]))){\n\t\t\tlexer.setPosition(position);\n\t\t\tnode=null;\n\t\t}\n\tif(null == node){\n\t\tvector=new Vector();\n\t\tvector.addElement(attribute);\n\t\tnode=lexer.getNodeFactory().createTagNode(lexer.getPage(),position,position,vector);\n\t}\n\ttag.setEndTag((Tag)node);\n\tnode.setParent(tag);\n\ttag.doSemanticAction();\n\treturn (tag);\n}","method":1,"docB":"Scan for script. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","docA":"Scan for style definitions. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","type":"T2","Alternatives":["Method A mactches Description A, Mehtod B mactches Description B.","Method A mactches Description B, Mehtod A mactches Description B.","Impossible to decide."]},"3":{"codeB":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tString language;\n\tString code;\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\tif(tag instanceof ScriptTag){\n\t\tlanguage=((ScriptTag)tag).getLanguage();\n\t\tif((null != language) && (language.equalsIgnoreCase(\"JScript.Encode\") || language.equalsIgnoreCase(\"VBScript.Encode\"))){\n\t\t\tcode=ScriptDecoder.Decode(lexer.getPage(),lexer.getCursor());\n\t\t\t((ScriptTag)tag).setScriptCode(code);\n\t\t}\n\t}\n\treturn (tag);\n}","codeA":"public Tag scan(Tag tag,Lexer lexer,NodeList stack) throws ParserException {\n\tNode content;\n\tint position;\n\tNode node;\n\tAttribute attribute;\n\tVector vector;\n\treturn (tag);\n}","method":2,"docB":"Scan for script. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","docA":"Scan for style definitions. Accumulates text from the page, until &lt;/[a-zA-Z] is encountered.","type":"T2","Alternatives":["Method A mactches Description A, Mehtod B mactches Description B.","Method A mactches Description B, Mehtod A mactches Description B.","Impossible to decide."]}}}