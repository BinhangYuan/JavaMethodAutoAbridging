{"filter":1,"results":[{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":2884,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"setXHTMLDocType","pos":1223,"doc":"/** \n * Adds a new xhtml doctype to the document.\n * @param root root node\n * @return <code>true<\/code> if a doctype has been added\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printAttrValue","pos":998,"doc":"/** \n * @param fout\n * @param indent\n * @param value\n * @param delim\n * @param wrappable\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanEntityRef","pos":1303,"doc":"/** \n * Scans an entity reference. \n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/filters/NamespaceBinder.java","method":"bindNamespaces","pos":385,"doc":"/** \n * Binds namespaces. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Report.java","method":"warning","pos":1208,"doc":"/** \n * Prints warnings.\n * @param lexer Lexer\n * @param element parent/missing tag\n * @param node current tag\n * @param code error code\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":266,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parsePI","pos":1568,"doc":"/** \n * Parse an XML processing instruction. Scan characters until \"?&gt;\" is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"fixDocType","pos":1462,"doc":"/** \n * Fixup doctype if missing.\n * @param root root node\n * @return <code>false<\/code> if current version has not been identified\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseServerInstruction","pos":3094,"doc":"/** \n * Invoked when &lt; is seen in place of attribute value but terminates on whitespace if not ASP, PHP or Tango this routine recognizes ' and \" quoted strings.\n * @return delimiter\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/EncodingUtils.java","method":"encodeCharToUTF8Bytes","pos":877,"doc":"/** \n * Encode a char to an array of bytes.\n * @param c char to encode\n * @param encodebuf will contain the decoded bytes\n * @param putter if not null it will be called to write bytes to out\n * @param count number of bytes written\n * @return <code>false<\/code>= ok, <code>true<\/code>= error\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/DOMNodeImpl.java","method":"replaceChild","pos":327,"doc":"/** \n * @see org.w3c.dom.Node#replaceChild\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"skipNewlines","pos":1530,"doc":"/** \n * Skips newlines and returns the number of newlines skipped. \n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanPI","pos":2452,"doc":"/** \n * Scans a processing instruction. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"getCDATA","pos":1742,"doc":"/** \n * Create a text node for the contents of a CDATA element like style or script which ends with &lt;/foo> for some foo.\n * @param container container node\n * @return cdata node\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/TileSet.java","method":"add","pos":74,"doc":"/** \n * Add a single tile to the list.\n * @param tile The tile to add.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Tidy.java","method":"parse","pos":384,"doc":"/** \n * Internal routine that actually does the parsing.\n * @param streamIn tidy StreamIn\n * @param o tidy Out\n * @return parsed org.w3c.tidy.Node\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/scanners/ScriptDecoder.java","method":"Decode","pos":267,"doc":"/** \n * Decode script encoded by the Microsoft obfuscator.\n * @param page The source for encoded text.\n * @param cursor The position at which to start decoding.This is advanced to the end of the encoded text.\n * @return The plaintext.\n * @exception ParserException If an error is discovered while decoding.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parseDocument","pos":3343,"doc":"/** \n * HTML is the top level element.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/nodes/TagNode.java","method":"setEmptyXmlTag","pos":734,"doc":"/** \n * Set this tag to be an empty xml node, or not. Adds or removes an ending slash on the tag.\n * @param emptyXmlTag If true, ensures there is an ending slash in the node,i.e. &lt;tag/&gt;, otherwise removes it.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/sample/Script.java","method":"endElement","pos":164,"doc":"/** \n * End element. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"cleanBodyAttrs","pos":384,"doc":"/** \n * Move presentation attribs from body to style element. <pre> background=\"foo\" . body { background-image: url(foo) } bgcolor=\"foo\" . body { background-color: foo } text=\"foo\" . body { color: foo } link=\"foo\" . :link { color: foo } vlink=\"foo\" . :visited { color: foo } alink=\"foo\" . :active { color: foo } <\/pre>\n * @param lexer Lexer\n * @param body body node\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/nodes/TextNode.java","method":"toString","pos":119,"doc":"/** \n * Express this string node as a printable string This is suitable for display in a debugger or output to a printout. Control characters are replaced by their equivalent escape sequence and contents is truncated to 80 characters.\n * @return A string representation of the string node.\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/SiteCapturer.java","method":"process","pos":470,"doc":"/** \n * Process a single page.\n * @param filter The filter to apply to the collected nodes.\n * @exception ParserException If a parse error occurs.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"findGivenVersion","pos":1040,"doc":"/** \n * Examine DOCTYPE to identify version.\n * @param doctype doctype node\n * @return version code\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":3050,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Node.java","method":"repairDuplicateAttributes","pos":347,"doc":"/** \n * The same attribute name can't be used more than once in each element. Discard or join attributes according to configuration.\n * @param lexer Lexer\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/TileSet.java","method":"split","pos":203,"doc":"/** \n * Split the large tile. Strategy: split horizontally (full width strips top and bottom). NOTE: top and bottom make sense only in terms of AWT coordinates.\n * @param small The incoming tile.\n * @param large The encompassing tile. The attributes of this oneare propagated to the fragments.\n * @param keep If <code>true<\/code>, the center area is kept,otherwise discarded.\n * @return The fragments from the large tile.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printScriptStyle","pos":1837,"doc":"/** \n * Print script and style elements. For XHTML, wrap the content as follows: <pre> JavaScript: //&lt;![CDATA[ content //]]> VBScript: '&lt;![CDATA[ content ']]> CSS: /*&lt;![CDATA[* / content /*]]>* / other: &lt;![CDATA[ content ]]> <\/pre>\n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n * @param node\n */\n"},{"file_path":"dataset/org/cowan/tagsoup/tagsoup/1.2.1/org/ccil/cowan/tagsoup/HTMLScanner.java","method":"scan","pos":378,"doc":"/** \n * Scan HTML source, reporting lexical events.\n * @param r0 Reader that provides characters\n * @param h ScanHandler that accepts lexical events.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/TagTable.java","method":"TagTable","pos":652,"doc":"/** \n * Instantiates a new tag table with known tags.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/nodes/TagNode.java","method":"setAttribute","pos":324,"doc":"/** \n * Set an attribute. This replaces an attribute of the same name. To set the zeroth attribute (the tag name), use setTagName().\n * @param attribute The attribute to set.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":2727,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scan","pos":3089,"doc":"/** \n * Scan. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":1063,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/tags/ObjectTag.java","method":"toString","pos":354,"doc":"/** \n * Output a string representing this object tag.\n * @return A string showing the contents of the object tag.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"initComponents","pos":422,"doc":"/** \n * Initialize the GUI.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLTagBalancer.java","method":"startElement","pos":549,"doc":"/** \n * Start element. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"center2Div","pos":1078,"doc":"/** \n * Symptom: <pre> &lt;center> <\/pre>. <p> Action: replace <code>&lt;center><\/code> by <code>&lt;div style=\"text-align: center\"><\/code> <\/p>\n * @param lexer Lexer\n * @param node center tag\n * @param pnode pnode[0] is the same as node, passed in as an array to allow modification\n * @return <code>true<\/code> if a center tag has been replaced by a div\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Report.java","method":"errorSummary","pos":1510,"doc":"/** \n * Prints error summary.\n * @param lexer Lexer\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseCDATA","pos":431,"doc":"/** \n * Return CDATA as a text node. Slightly less rigid than  {@link #parseCDATA()} this method provides forparsing CDATA that may contain quoted strings that have embedded ETAGO (\"&lt;/\") delimiters and skips single and multiline comments.\n * @param quotesmart If <code>true<\/code> the strict definition of CDATA isextended to allow for single or double quoted ETAGO (\"&lt;/\") sequences.\n * @return The <code>TextNode<\/code> of the CDATA or <code>null<\/code> if none.\n * @see #parseCDATA()\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanMarkupContent","pos":2392,"doc":"/** \n * Scans markup content. \n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseString","pos":744,"doc":"/** \n * Parse a string node. Scan characters until \"&lt;/\", \"&lt;%\", \"&lt;!\" or &lt; followed by a letter is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @param quotesmart If <code>true<\/code>, strings ignore quoted contents.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Tidy.java","method":"mainExec","pos":733,"doc":"/** \n * Main method, but returns the return code as an int instead of calling System.exit(code). Needed for testing main method without shutting down tests.\n * @param argv command line parameters\n * @return return code\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/scanners/CompositeTagScanner.java","method":"scan","pos":70,"doc":"/** \n * Collect the children. <p>An initial test is performed for an empty XML tag, in which case the start tag and end tag of the returned tag are the same and it has no children.<p> If it's not an empty XML tag, the lexer is repeatedly asked for subsequent nodes until an end tag is found or a node is encountered that matches the tag ender set or end tag ender set. In the latter case, a virtual end tag is created. Each node found that is not the end tag is added to the list of children. The end tag is special and not a child.<p> Nodes that also have a CompositeTagScanner as their scanner are recursed into, which provides the nested structure of an HTML page. This method operates in two possible modes, depending on a private boolean. It can recurse on the JVM stack, which has caused some overflow problems in the past, or it can use the supplied stack argument to nest scanning of child tags within itself. The former is left as an option in the code, mostly to help subsequent modifiers visualize what the internal nesting is doing.\n * @param tag The tag this scanner is responsible for.\n * @param lexer The source of subsequent nodes.\n * @param stack The parse stack. May contain pending tags that enclosethis tag.\n * @return The resultant tag (may be unchanged).\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/StreamInJavaImpl.java","method":"readChar","pos":181,"doc":"/** \n * @see org.w3c.tidy.StreamIn#readChar()\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanAttribute","pos":2756,"doc":"/** \n * Scans an attribute, pseudo or real. \n * @param attributes The list of attributes.\n * @param empty      Is used for a second return value to indicate whether the start element tag is empty  (e.g. \"/&gt;\").\n * @param endc       The end character that appears before theclosing angle bracket ('>').\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/util/Translate.java","method":"decode","pos":939,"doc":"/** \n * Decode a stream containing references. Change all numeric character reference and character entity references to unicode characters. If <code>DECODE_LINE_BY_LINE<\/code> is true, the input stream is broken up into lines, terminated by either carriage return or newline, in order to reduce the latency and maximum buffering memory size required.\n * @param in The stream to translate. It is assumed that the inputstream is encoded with ISO-8859-1 since the table of character entity references in this class applies only to ISO-8859-1.\n * @param out The stream to write the decoded stream to.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseJsp","pos":1387,"doc":"/** \n * Parse a java server page node. Scan characters until \"%&gt;\" is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printTree","pos":2077,"doc":"/** \n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n * @param node\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/SiteCapturer.java","method":"copy","pos":394,"doc":"/** \n * Copy a resource (image) locally. Removes one element from the 'to be copied' list and saves the resource it points to locally as a file.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"extractImageLinks","pos":754,"doc":"/** \n * Get the links of an element of a document. Only gets the links on IMG elements that reference another image. The latter is based on suffix (.jpg, .gif and .png).\n * @param lexer The fully conditioned lexer, ready to rock.\n * @param docbase The url to read.\n * @return The URLs, targets of the IMG links;\n * @exception IOException If the underlying infrastructure throws it.\n * @exception ParserException If there is a problem parsing the url.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":692,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"nextNode","pos":320,"doc":"/** \n * Get the next node from the source.\n * @param quotesmart If <code>true<\/code>, strings ignore quoted contents.\n * @return A Remark, Text or Tag, or <code>null<\/code> if nomore lexemes are present.\n * @exception ParserException If there is a problem with theunderlying page.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"setInputSource","pos":828,"doc":"/** \n * Sets the input source. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printSlide","pos":2592,"doc":"/** \n * Called from printTree to print the content of a slide from the node slidecontent. On return slidecontent points to the node starting the next slide or null. The variables slide and count are used to customise the navigation bar.\n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/filters/Writer.java","method":"main","pos":412,"doc":"/** \n * Main. \n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/Attribute.java","method":"setRawValue","pos":544,"doc":"/** \n * Set the value of the attribute and the quote character. If the value is pure whitespace, assign it 'as is' and reset the quote character. If not, check for leading and trailing double or single quotes, and if found use this as the quote character and the inner contents of <code>value<\/code> as the real value. Otherwise, examine the string to determine if quotes are needed and an appropriate quote character if so. This may involve changing double quotes within the string to character references.\n * @param value The new value.\n * @see #getRawValue\n * @see #getRawValue(StringBuffer)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseValue","pos":3202,"doc":"/** \n * Parse an attribute value.\n * @param name attribute name\n * @param foldCase fold case?\n * @param isempty is attribute empty? Passed as an array reference to allow modification\n * @param pdelim delimiter, passed as an array reference to allow modification\n * @return parsed value\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseAttribute","pos":2952,"doc":"/** \n * consumes the '>' terminating start tags.\n * @param isempty flag is passed as array so it can be modified\n * @param asp asp Node, passed as array so it can be modified\n * @param php php Node, passed as array so it can be modified\n * @return parsed attribute\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Report.java","method":"attrError","pos":1019,"doc":"/** \n * Prints error messages for attributes.\n * @param lexer Lexer\n * @param node current tag\n * @param attribute attribute\n * @param code error code\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Sequencer.java","method":"random","pos":106,"doc":"/** \n * Compute a random point to load the image. Generate a random point for one of the corners of the image and then condition the numbers so the image is on screen.\n * @param url The url this picture was fetched from.Used in computing the random position, so the picture is always placed in the same location, even when refetched.\n * @param width The width of the image.\n * @param height The height of the image.\n * @return The random point to use.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/beans/BeanyBaby.java","method":"initComponents","pos":271,"doc":"/** \n * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/filters/Writer.java","method":"printStartElement","pos":330,"doc":"/** \n * Print start element. \n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"expandSystemId","pos":942,"doc":"/** \n * Expands a system id and returns the system id as a URI, if it can be expanded. A return value of null means that the identifier is already expanded. An exception thrown indicates a failure to expand the id.\n * @param systemId The systemId to be expanded.\n * @return Returns the URI string representing the expanded systemidentifier. A null value indicates that the given system identifier is already expanded.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/util/Translate.java","method":"decode","pos":738,"doc":"/** \n * Decode a string containing references. Change all numeric character reference and character entity references to unicode characters.\n * @param string The string to translate.\n * @param list If non-null on input, this list is populated with the offsetsof translated entities - hence this will always contain an even number of Integer elements, the start and end index of the original character reference.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":2009,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/util/ParserUtils.java","method":"splitTags","pos":680,"doc":"/** \n * Split the input string in a string array, considering the tags as delimiter for splitting. <BR>For example if you call splitTags(&quot;Begin &lt;DIV&gt;&lt;DIV&gt;  +12.5 &lt;/DIV&gt;&lt;/DIV&gt; ALL OK&quot;, new String[] {&quot;DIV&quot;}), <BR>you obtain a string array {&quot;Begin &quot;, &quot; ALL OK&quot;} as output (splitted &lt;DIV&gt; tags and their content recursively). <BR>For example if you call splitTags(&quot;Begin &lt;DIV&gt;&lt;DIV&gt;  +12.5 &lt;/DIV&gt;&lt;/DIV&gt; ALL OK&quot;, new String[] {&quot;DIV&quot;}, false, false), <BR>you obtain a string array {&quot;Begin &quot;, &quot;&lt;DIV&gt;  +12.5 &lt;/DIV&gt;&quot;, &quot; ALL OK&quot;} as output (splitted &lt;DIV&gt; tags and not their content and no recursively). <BR>For example if you call splitTags(&quot;Begin &lt;DIV&gt;&lt;DIV&gt;  +12.5 &lt;/DIV&gt;&lt;/DIV&gt; ALL OK&quot;, new String[] {&quot;DIV&quot;}, true, false), <BR>you obtain a string array {&quot;Begin &quot;, &quot;  +12.5 &quot;, &quot; ALL OK&quot;} as output (splitted &lt;DIV&gt; tags and not their content recursively). <BR>For example if you call splitTags(&quot;Begin &lt;DIV&gt;&lt;DIV&gt;  +12.5 &lt;/DIV&gt;&lt;/DIV&gt; ALL OK&quot;, new String[] {&quot;DIV&quot;}, false, true), <BR>you obtain a string array {&quot;Begin &quot;, &quot; ALL OK&quot;} as output (splitted &lt;DIV&gt; tags and their content).\n * @param input The string in input.\n * @param tags The tags to be used as splitting delimiter.\n * @param recursive Optional parameter (true if not present), if true delete all the tags recursively.\n * @param insideTag Optional parameter (true if not present), if true delete also the content of the tags.\n * @return The string array containing the strings delimited by tags.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scan","pos":1954,"doc":"/** \n * Scan. \n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/nodes/RemarkNode.java","method":"toString","pos":144,"doc":"/** \n * Print the contents of the remark tag. This is suitable for display in a debugger or output to a printout. Control characters are replaced by their equivalent escape sequence and contents is truncated to 80 characters.\n * @return A string representation of the remark node.\n */\n"},{"file_path":"dataset/org/htmlparser/filterbuilder/2.1/org/htmlparser/parserapplications/filterbuilder/FilterBuilder.java","method":"makeProgram","pos":687,"doc":"/** \n * Makes a program like: <pre> // Generated by FilterBuilder. http://htmlparser.org // [aced0005737200206f72672e68746d6c7061727365722e66696c746572732e416e6446696c74657224c30516b2b7b2120200015b000b6d5072656469636174657374001c5b4c6f72672f68746d6c7061727365722f4e6f646546696c7465723b78707572001c5b4c6f72672e68746d6c7061727365722e4e6f646546696c7465723b8f17479b1d5f7992020000787000000002737200246f72672e68746d6c7061727365722e66696c746572732e5461674e616d6546696c746572b28b2601a614890f0200014c00056d4e616d657400124c6a6176612f6c616e672f537472696e673b78707400044d455441737200296f72672e68746d6c7061727365722e66696c746572732e48617341747472696275746546696c74657296abdfb3b0714cda0200024c000a6d41747472696275746571007e00064c00066d56616c756571007e000678707400046e616d6570] import org.htmlparser.*; import org.htmlparser.filters.*; import org.htmlparser.beans.*; import org.htmlparser.util.*; public class Test { public static void main (String args[]) { TagNameFilter filter0 = new TagNameFilter (); filter0.setName (\"META\"); HasAttributeFilter filter1 = new HasAttributeFilter (); filter1.setAttributeName (\"name\"); NodeFilter[] array0 = new NodeFilter[2]; array0[0] = filter0; array0[1] = filter1; AndFilter filter2 = new AndFilter (); filter2.setPredicates (array0); NodeFilter[] array1 = new NodeFilter[1]; array1[0] = filter2; FilterBean bean = new FilterBean (); bean.setFilters (array1); if (0 != args.length) { bean.setURL (args[0]); System.out.println (bean.getNodes ().toHtml ()); } else System.out.println (\"Usage: java -classpath .:htmlparser.jar:htmllexer.jar Test <url>\"); } } <\/pre>\n * @param name The name of the class. \n * @param out The buffer to append to.\n * @param bean The bean to extract the filters from to make the program.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseEntity","pos":648,"doc":"/** \n * Parse an html entity.\n * @param mode mode\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/EncodingUtils.java","method":"decodeUTF8BytesToChar","pos":695,"doc":"/** \n * Decodes an array of bytes to a char.\n * @param c will contain the decoded char\n * @param firstByte first input byte\n * @param successorBytes array containing successor bytes (can be null if a getter is provided).\n * @param getter callback used to get new bytes if successorBytes doesn't contain enough bytes\n * @param count will contain the number of bytes read\n * @param startInSuccessorBytesArray starting offset for bytes in successorBytes\n * @return <code>true<\/code> if error\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printChar","pos":535,"doc":"/** \n * @param c\n * @param mode\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/ThumbelinaFrame.java","method":"googlesearch","pos":862,"doc":"/** \n * Query google via user specified keywords and queue results. Asks the user for keywords, and then submits them as input to the usual google form: <pre> <form action=\"/search\" name=f> <span id=hf><\/span> <table cellspacing=0 cellpadding=0> <tr valign=middle> <td width=75>&nbsp;<\/td> <td align=center> <input maxLength=256 size=55 name=q value=\"\"> <input type=hidden name=ie value=\"UTF-8\"> <input type=hidden name=oe value=\"UTF-8\"> <input name=hl type=hidden value=en><br> <input type=submit value=\"Google Search\" name=btnG> <input type=submit value=\"I'm Feeling Lucky\" name=btnI> <\/td> <td valign=top nowrap><font size=-2> &nbsp;&#8226; <a href=/advanced_search?hl=en>Advanced Search<\/a> <br>&nbsp;&#8226; <a href=/preferences?hl=en>Preferences<\/a> <br>&nbsp;&#8226; <a href=/language_tools?hl=en>Language Tools<\/a> <\/font> <\/td> <\/tr> <tr> <td colspan=3 align=center><font size=-1> Search: <input id=all type=radio name=meta value=\"\" checked> <label for=all> the web<\/label> <input id=cty type=radio name=meta value=\"cr=countryCA\" > <label for=cty>pages from Canada<\/label> <\/font> <\/td> <\/tr> <\/table> <\/form> <\/pre> Creates a query of the form: <pre> http://www.google.ca/search?hl=en&ie=UTF-8&oe=UTF-8&q=thumbs&btnG=Google+Search&meta= <\/pre>\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/AttrCheckImpl.java","method":"check","pos":250,"doc":"/** \n * @see AttrCheck#check(Lexer,Node,AttVal)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/http/ConnectionManager.java","method":"openConnection","pos":547,"doc":"/** \n * Opens a connection using the given url.\n * @param url The url to open.\n * @return The connection.\n * @exception ParserException if an i/o exception occurs accessing the url.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"getToken","pos":1902,"doc":"/** \n * Gets a token.\n * @param mode one of the following:<ul> <li><code>MixedContent<\/code>-- for elements which don't accept PCDATA<\/li> <li><code>Preformatted<\/code>-- white spacepreserved as is<\/li> <li><code>IgnoreMarkup<\/code>-- for CDATA elements such as script, style<\/li> <\/ul>\n * @return next Node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printDocType","pos":1467,"doc":"/** \n * @param fout\n * @param indent\n * @param lexer\n * @param node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"cleanWord2000","pos":2103,"doc":"/** \n * This is a major clean up to strip out all the extra stuff you get when you save as web page from Word 2000. It doesn't yet know what to do with VML tags, but these will appear as errors unless you declare them as new tags, such as o:p which needs to be declared as inline.\n * @param lexer Lexer\n * @param node node to clean up\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"getCharacter","pos":713,"doc":"/** \n * Read the character at the given cursor position. The cursor position can be only behind or equal to the current source position. Returns end of lines (EOL) as \\n, by converting \\r and \\r\\n to \\n, and updates the end-of-line index accordingly. Advances the cursor position by one (or two in the \\r\\n case).\n * @param cursor The position to read at.\n * @return The character at that position, and modifies the cursor toprepare for the next read. If the source is exhausted a zero is returned.\n * @exception ParserException If an IOException on the underlying sourceoccurs, or an attempt is made to read characters in the future (the cursor position is ahead of the underlying stream)\n */\n"},{"file_path":"dataset/org/htmlparser/filterbuilder/2.1/org/htmlparser/parserapplications/filterbuilder/FilterBuilder.java","method":"FilterBuilder","pos":242,"doc":"/** \n * Create an FilterBuilder programming environment.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":2506,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/ObjectFactory.java","method":"createObject","pos":99,"doc":"/** \n * Finds the implementation Class object in the specified order.  The specified order is the following: <ol> <li>query the system property using <code>System.getProperty<\/code> <li>read <code>$java.home/lib/<i>propertiesFilename<\/i><\/code> file <li>read <code>META-INF/services/<i>factoryId<\/i><\/code> file <li>use fallback classname <\/ol>\n * @return Class object of factory, never null\n * @param factoryId             Name of the factory to find, same asa property name\n * @param propertiesFilename The filename in the $java.home/lib directoryof the properties file.  If none specified, ${java.home}/lib/xerces.properties will be used.\n * @param fallbackClassName     Implementation class name, if nothing elseis found.  Use null to mean no fallback.\n * @exception ObjectFactory.ConfigurationError\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":1746,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/http/ConnectionManager.java","method":"parseCookies","pos":1082,"doc":"/** \n * Check for cookie and parse into cookie jar.\n * @param connection The connection to extract cookie information from.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanDoctype","pos":1168,"doc":"/** \n * Scans a DOCTYPE line. \n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanStartElement","pos":2569,"doc":"/** \n * Scans a start element. \n * @param empty Is used for a second return value to indicate whetherthe start element tag is empty (e.g. \"/&gt;\").\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/AttrCheckImpl.java","method":"check","pos":885,"doc":"/** \n * @see AttrCheck#check(Lexer,Node,AttVal)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":495,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"fixWindowsCharacter","pos":1091,"doc":"/** \n * Fixes Microsoft Windows&reg; specific characters. <p> Details about this common problem can be found at  <a href='http://www.cs.tut.fi/~jkorpela/www/windows-chars.html'>http://www.cs.tut.fi/~jkorpela/www/windows-chars.html<\/a>\n */\n"},{"file_path":"dataset/org/cowan/tagsoup/tagsoup/1.2.1/org/ccil/cowan/tagsoup/HTMLSchema.java","method":"HTMLSchema","pos":26,"doc":"/** \n * Returns a newly constructed HTMLSchema object independent of any existing ones.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/tags/ImageTag.java","method":"extractImageLocn","pos":71,"doc":"/** \n * Extract the location of the image Given the tag (with attributes), and the url of the html page in which this tag exists, perform best effort to extract the 'intended' URL. Attempts to handle such attributes as: <pre> &lt;IMG SRC=http://www.redgreen.com&gt; - normal &lt;IMG SRC =http://www.redgreen.com&gt; - space between attribute name and equals sign &lt;IMG SRC= http://www.redgreen.com&gt; - space between equals sign and attribute value &lt;IMG SRC = http://www.redgreen.com&gt; - space both sides of equals sign <\/pre>\n * @return The relative URL for the image.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseTag","pos":973,"doc":"/** \n * Parse a tag. Parse the name and attributes from a start tag.<p> From the <a href=\"http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2\"> HTML 4.01 Specification, W3C Recommendation 24 December 1999<\/a> http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2<p> <cite> 3.2.2 Attributes<p> Elements may have associated properties, called attributes, which may have values (by default, or set by authors or scripts). Attribute/value pairs appear before the final \">\" of an element's start tag. Any number of (legal) attribute value pairs, separated by spaces, may appear in an element's start tag. They may appear in any order.<p> In this example, the id attribute is set for an H1 element: <code> &lt;H1 id=\"section1\"&gt; <\/code> This is an identified heading thanks to the id attribute <code> &lt;/H1&gt; <\/code> By default, SGML requires that all attribute values be delimited using either double quotation marks (ASCII decimal 34) or single quotation marks (ASCII decimal 39). Single quote marks can be included within the attribute value when the value is delimited by double quote marks, and vice versa. Authors may also use numeric character references to represent double quotes (&amp;#34;) and single quotes (&amp;#39;). For doublequotes authors can also use the character entity reference &amp;quot;.<p> In certain cases, authors may specify the value of an attribute without any quotation marks. The attribute value may only contain letters (a-z and A-Z), digits (0-9), hyphens (ASCII decimal 45), periods (ASCII decimal 46), underscores (ASCII decimal 95), and colons (ASCII decimal 58). We recommend using quotation marks even when it is possible to eliminate them.<p> Attribute names are always case-insensitive.<p> Attribute values are generally case-insensitive. The definition of each attribute in the reference manual indicates whether its value is case-insensitive.<p> All the attributes defined by this specification are listed in the attribute index.<p> <\/cite> <p> This method uses a state machine with the following states: <ol> <li>state 0 - outside of any attribute<\/li> <li>state 1 - within attributre name<\/li> <li>state 2 - equals hit<\/li> <li>state 3 - within naked attribute value.<\/li> <li>state 4 - within single quoted attribute value<\/li> <li>state 5 - within double quoted attribute value<\/li> <li>state 6 - whitespaces after attribute name could lead to state 2 (=)or state 0<\/li> <\/ol> <p> The starting point for the various components is stored in an array of integers that match the initiation point for the states one-for-one, i.e. bookmarks[0] is where state 0 began, bookmarks[1] is where state 1 began, etc. Attributes are stored in a <code>Vector<\/code> having one slot for each whitespace or attribute/value pair. The first slot is for attribute name (kind of like a standalone attribute).\n * @param start The position at which to start scanning.\n * @return The parsed tag.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/ThumbelinaFrame.java","method":"makeMenu","pos":501,"doc":"/** \n * Create the menu. Initializes the menu and adds it to the frame.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"parse","pos":1883,"doc":"/** \n * @see org.w3c.tidy.Parser#parse(org.w3c.tidy.Lexer,org.w3c.tidy.Node,short)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLTagBalancer.java","method":"endElement","pos":973,"doc":"/** \n * End element. \n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printXMLTree","pos":2374,"doc":"/** \n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n * @param node\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"debugBufferIfNeeded","pos":1821,"doc":"/** \n * Prints the contents of the character buffer to standard out. \n */\n"}]}