{"filter":1,"results":[{"file_path":"dataset/org/cowan/tagsoup/tagsoup/1.2.1/org/ccil/cowan/tagsoup/CommandLine.java","method":"main","pos":60,"doc":"/** \n * Main method.  Processes specified files or standard input.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"run","pos":1061,"doc":"/** \n * The main processing loop. Pull suspect URLs off the queue one at a time, fetch and parse it, request images and enqueue further links.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/PrototypicalNodeFactory.java","method":"createTagNode","pos":478,"doc":"/** \n * Create a new tag node. Note that the attributes vector contains at least one element, which is the tag name (standalone attribute) at position zero. This can be used to decide which type of node to create, or gate other processing that may be appropriate.\n * @param page The page the node is on.\n * @param start The beginning position of the tag.\n * @param end The ending positiong of the tag.\n * @param attributes The attributes contained in this tag.\n * @return A tag node comprising the indicated characters from the page.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/sax/XMLReader.java","method":"doSAX","pos":616,"doc":"/** \n * Process nodes recursively on the DocumentHandler. Calls methods on the handler based on the type and whether it's an end tag. Processes composite tags recursively. Does rudimentary namespace processing according to the state of  {@link #mNameSpaces}and  {@link #mNameSpacePrefixes}. \n * @param node The htmlparser node to traverse.\n * @exception ParserException If a parse error occurs.\n * @exception SAXException If a SAX error occurs.\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/SiteCapturer.java","method":"process","pos":470,"doc":"/** \n * Process a single page.\n * @param filter The filter to apply to the collected nodes.\n * @exception ParserException If a parse error occurs.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parsePI","pos":1568,"doc":"/** \n * Parse an XML processing instruction. Scan characters until \"?&gt;\" is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanPI","pos":2452,"doc":"/** \n * Scans a processing instruction. \n */\n"},{"file_path":"dataset/org/htmlparser/filterbuilder/2.1/org/htmlparser/parserapplications/filterbuilder/HtmlTreeCellRenderer.java","method":"toHtml","pos":62,"doc":"/** \n * Render the tag as HTML. This is different from the tag's normal toHtml() method in that it doesn't process children or end tags, just the initial tag, and it also wraps the tag in html a label would expect.\n * @see org.htmlparser.Node#toHtml()\n * @param tag The tag to convert to HTML.\n * @return A string suitable for rendering the tag.\n */\n"}]}