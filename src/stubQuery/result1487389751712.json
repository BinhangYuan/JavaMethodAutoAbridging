{"filter":1,"results":[{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/filters/Writer.java","method":"printStartElement","pos":330,"doc":"/** \n * Print start element. \n */\n"},{"file_path":"dataset/org/cowan/tagsoup/tagsoup/1.2.1/org/ccil/cowan/tagsoup/XMLWriter.java","method":"startDocument","pos":491,"doc":"/** \n * Write the XML declaration at the beginning of the document. Pass the event on down the filter chain for further processing.\n * @exception org.xml.sax.SAXException If there is an errorwriting the XML declaration, or if a handler further down the filter chain raises an exception.\n * @see org.xml.sax.ContentHandler#startDocument\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/nodes/TagNode.java","method":"toTagHtml","pos":606,"doc":"/** \n * Return the tag HTML. Like <code>toHtml()<\/code> but since this is not implemented by  {@link org.htmlparser.tags.CompositeTag}, only renders the start tag.\n * @return The sequence of characters for the start tag only.\n * @see #toHtml()\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseRemark","pos":1236,"doc":"/** \n * Parse a comment. Parse a remark markup.<p> From the <a href=\"http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.4\"> HTML 4.01 Specification, W3C Recommendation 24 December 1999<\/a> http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.4<p> <cite> 3.2.4 Comments<p> HTML comments have the following syntax:<p> <code> &lt;!-- this is a comment --&gt;<p> &lt;!-- and so is this one,<p> which occupies more than one line --&gt;<p> <\/code> White space is not permitted between the markup declaration open delimiter(\"&lt;!\") and the comment open delimiter (\"--\"), but is permitted between the comment close delimiter (\"--\") and the markup declaration close delimiter (\"&gt;\"). A common error is to include a string of hyphens (\"---\") within a comment. Authors should avoid putting two or more adjacent hyphens inside comments. Information that appears between comments has no special meaning (e.g., character references are not interpreted as such). Note that comments are markup.<p> <\/cite> <p> This method uses a state machine with the following states: <ol> <li>state 0 - prior to the first open delimiter (first dash)<\/li> <li>state 1 - prior to the second open delimiter (second dash)<\/li> <li>state 2 - prior to the first closing delimiter (first dash)<\/li> <li>state 3 - prior to the second closing delimiter (second dash)<\/li> <li>state 4 - prior to the terminating &gt;<\/li> <\/ol> <p> All comment text (everything excluding the &lt; and &gt;), is included in the remark text. We allow terminators like --!&gt; even though this isn't part of the spec.\n * @param start The position at which to start scanning.\n * @param quotesmart If <code>true<\/code>, strings ignore quoted contents.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanStartElement","pos":2569,"doc":"/** \n * Scans a start element. \n * @param empty Is used for a second return value to indicate whetherthe start element tag is empty (e.g. \"/&gt;\").\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Report.java","method":"getTagName","pos":790,"doc":"/** \n * Returns a formatted tag name handling start and ent tags, nulls, doctypes, and text.\n * @param tag Node\n * @return formatted tag name\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"setConnection","pos":516,"doc":"/** \n * Set the URLConnection to be used by this page. Starts reading from the given connection. This also resets the current url.\n * @param connection The connection to use.It will be connected by this method.\n * @exception ParserException If 1)the <code>connect()<\/code> method fails or 2)an I/O error occurs opening the input stream or  3)the character set designated in the HTTP header is unsupported or or 4)URL used to create the connection object supplied is not in the right form or syntax \n */\n"},{"file_path":"dataset/org/htmlparser/filterbuilder/2.1/org/htmlparser/parserapplications/filterbuilder/FilterBuilder.java","method":"addFilter","pos":555,"doc":"/** \n * Add a filter to the GUI. Adds the filter specified by class_name to the menu, toolbar and starts listening for actions.\n * @param menu The menu to add the filter to.\n * @param toolbar The toolbar to add the filter to.\n * @param class_name The class name for the filter wrapper.From the wrapper, the NodeFilter, description and icon can be obtained.\n */\n"},{"file_path":"dataset/org/cowan/tagsoup/tagsoup/1.2.1/org/ccil/cowan/tagsoup/XMLWriter.java","method":"writeEsc","pos":1192,"doc":"/** \n * Write an array of data characters with escaping.\n * @param ch The array of characters.\n * @param start The starting position.\n * @param length The number of characters to use.\n * @param isAttVal true if this is an attribute value literal.\n * @exception org.xml.SAXException If there is an error writingthe characters, this method will throw an IOException wrapped in a SAXException.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseAsp","pos":2859,"doc":"/** \n * parser for ASP within start tags Some people use ASP for to customize attributes Tidy isn't really well suited to dealing with ASP This is a workaround for attributes, but won't deal with the case where the ASP is used to tailor the attribute value. Here is an example of a work around for using ASP in attribute values: <code>href='<%=rsSchool.Fields(\"ID\").Value%>'<\/code> where the ASP that generates the attribute value is masked from Tidy by the quotemarks.\n * @return parsed Node\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parsePI","pos":1568,"doc":"/** \n * Parse an XML processing instruction. Scan characters until \"?&gt;\" is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"parseAttribute","pos":2952,"doc":"/** \n * consumes the '>' terminating start tags.\n * @param isempty flag is passed as array so it can be modified\n * @param asp asp Node, passed as array so it can be modified\n * @param php php Node, passed as array so it can be modified\n * @return parsed attribute\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.2/org/jsoup/select/NodeTraversor.java","method":"traverse","pos":21,"doc":"/** \n * Start a depth-first traverse of the root and all of its descendants.\n * @param root the root node point to traverse.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"fixXmlDecl","pos":1669,"doc":"/** \n * Ensure XML document starts with <code>&lt;?XML version=\"1.0\"?&gt;<\/code>. Add encoding attribute if not using ASCII or UTF-8 output.\n * @param root root node\n * @return always true\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"isCSS1Selector","pos":3562,"doc":"/** \n * In CSS1, selectors can contain only the characters A-Z, 0-9, and Unicode characters 161-255, plus dash (-); they cannot start with a dash or a digit; they can also contain escaped characters and any Unicode character as a numeric code (see next item). The backslash followed by at most four hexadecimal digits (0..9A..F) stands for the Unicode character with that number. Any character except a hexadecimal digit can be escaped to remove its special meaning, by putting a backslash in front.\n * @param buf css selector name\n * @return <code>true<\/code> if the given string is a valid css1 selector name\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.3/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/ParserImpl.java","method":"moveToHead","pos":206,"doc":"/** \n * Move node to the head, where element is used as starting point in hunt for head. Normally called during parsing.\n * @param lexer\n * @param element\n * @param node\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/PrototypicalNodeFactory.java","method":"createTagNode","pos":478,"doc":"/** \n * Create a new tag node. Note that the attributes vector contains at least one element, which is the tag name (standalone attribute) at position zero. This can be used to decide which type of node to create, or gate other processing that may be appropriate.\n * @param page The page the node is on.\n * @param start The beginning position of the tag.\n * @param end The ending positiong of the tag.\n * @param attributes The attributes contained in this tag.\n * @return A tag node comprising the indicated characters from the page.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":128,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"scanAttribute","pos":2756,"doc":"/** \n * Scans an attribute, pseudo or real. \n * @param attributes The list of attributes.\n * @param empty      Is used for a second return value to indicate whether the start element tag is empty  (e.g. \"/&gt;\").\n * @param endc       The end character that appears before theclosing angle bracket ('>').\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"reduceToContent","pos":3668,"doc":"/** \n * Reduces the buffer to the content between start and end marker when only whitespaces are found before the startMarker as well as after the end marker\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Node.java","method":"trimInitialSpace","pos":892,"doc":"/** \n * This maps <code>&lt;p> hello &lt;em> world &lt;/em><\/code> to <code>&lt;p> hello &lt;em> world &lt;/em><\/code>. Trims initial space, by moving it before the start tag, or if this element is the first in parent's content, then by discarding the space.\n * @param lexer Lexer\n * @param element parent node\n * @param text text node\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.4.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/EncodingUtils.java","method":"decodeUTF8BytesToChar","pos":695,"doc":"/** \n * Decodes an array of bytes to a char.\n * @param c will contain the decoded char\n * @param firstByte first input byte\n * @param successorBytes array containing successor bytes (can be null if a getter is provided).\n * @param getter callback used to get new bytes if successorBytes doesn't contain enough bytes\n * @param count will contain the number of bytes read\n * @param startInSuccessorBytesArray starting offset for bytes in successorBytes\n * @return <code>true<\/code> if error\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseString","pos":744,"doc":"/** \n * Parse a string node. Scan characters until \"&lt;/\", \"&lt;%\", \"&lt;!\" or &lt; followed by a letter is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @param quotesmart If <code>true<\/code>, strings ignore quoted contents.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseTag","pos":973,"doc":"/** \n * Parse a tag. Parse the name and attributes from a start tag.<p> From the <a href=\"http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2\"> HTML 4.01 Specification, W3C Recommendation 24 December 1999<\/a> http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2<p> <cite> 3.2.2 Attributes<p> Elements may have associated properties, called attributes, which may have values (by default, or set by authors or scripts). Attribute/value pairs appear before the final \">\" of an element's start tag. Any number of (legal) attribute value pairs, separated by spaces, may appear in an element's start tag. They may appear in any order.<p> In this example, the id attribute is set for an H1 element: <code> &lt;H1 id=\"section1\"&gt; <\/code> This is an identified heading thanks to the id attribute <code> &lt;/H1&gt; <\/code> By default, SGML requires that all attribute values be delimited using either double quotation marks (ASCII decimal 34) or single quotation marks (ASCII decimal 39). Single quote marks can be included within the attribute value when the value is delimited by double quote marks, and vice versa. Authors may also use numeric character references to represent double quotes (&amp;#34;) and single quotes (&amp;#39;). For doublequotes authors can also use the character entity reference &amp;quot;.<p> In certain cases, authors may specify the value of an attribute without any quotation marks. The attribute value may only contain letters (a-z and A-Z), digits (0-9), hyphens (ASCII decimal 45), periods (ASCII decimal 46), underscores (ASCII decimal 95), and colons (ASCII decimal 58). We recommend using quotation marks even when it is possible to eliminate them.<p> Attribute names are always case-insensitive.<p> Attribute values are generally case-insensitive. The definition of each attribute in the reference manual indicates whether its value is case-insensitive.<p> All the attributes defined by this specification are listed in the attribute index.<p> <\/cite> <p> This method uses a state machine with the following states: <ol> <li>state 0 - outside of any attribute<\/li> <li>state 1 - within attributre name<\/li> <li>state 2 - equals hit<\/li> <li>state 3 - within naked attribute value.<\/li> <li>state 4 - within single quoted attribute value<\/li> <li>state 5 - within double quoted attribute value<\/li> <li>state 6 - whitespaces after attribute name could lead to state 2 (=)or state 0<\/li> <\/ol> <p> The starting point for the various components is stored in an array of integers that match the initiation point for the states one-for-one, i.e. bookmarks[0] is where state 0 began, bookmarks[1] is where state 1 began, etc. Attributes are stored in a <code>Vector<\/code> having one slot for each whitespace or attribute/value pair. The first slot is for attribute name (kind of like a standalone attribute).\n * @param start The position at which to start scanning.\n * @return The parsed tag.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLTagBalancer.java","method":"startGeneralEntity","pos":789,"doc":"/** \n * Start entity. \n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.3/org/jsoup/nodes/Node.java","method":"absUrl","pos":128,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.1.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLTagBalancer.java","method":"startDocument","pos":395,"doc":"/** \n * Start document. \n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/scanners/CompositeTagScanner.java","method":"scan","pos":70,"doc":"/** \n * Collect the children. <p>An initial test is performed for an empty XML tag, in which case the start tag and end tag of the returned tag are the same and it has no children.<p> If it's not an empty XML tag, the lexer is repeatedly asked for subsequent nodes until an end tag is found or a node is encountered that matches the tag ender set or end tag ender set. In the latter case, a virtual end tag is created. Each node found that is not the end tag is added to the list of children. The end tag is special and not a child.<p> Nodes that also have a CompositeTagScanner as their scanner are recursed into, which provides the nested structure of an HTML page. This method operates in two possible modes, depending on a private boolean. It can recurse on the JVM stack, which has caused some overflow problems in the past, or it can use the supplied stack argument to nest scanning of child tags within itself. The former is left as an option in the code, mostly to help subsequent modifiers visualize what the internal nesting is doing.\n * @param tag The tag this scanner is responsible for.\n * @param lexer The source of subsequent nodes.\n * @param stack The parse stack. May contain pending tags that enclosethis tag.\n * @return The resultant tag (may be unchanged).\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/filters/Purifier.java","method":"handleStartElement","pos":324,"doc":"/** \n * Handle start element. \n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLScanner.java","method":"evaluateInputSource","pos":571,"doc":"/** \n * Immediately evaluates an input source and add the new content (e.g.  the output written by an embedded script).\n * @param inputSource The new input source to start evaluating.\n * @see #pushInputSource(XMLInputSource)\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/scanners/ScriptDecoder.java","method":"Decode","pos":267,"doc":"/** \n * Decode script encoded by the Microsoft obfuscator.\n * @param page The source for encoded text.\n * @param cursor The position at which to start decoding.This is advanced to the end of the encoded text.\n * @return The plaintext.\n * @exception ParserException If an error is discovered while decoding.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.0/org/jsoup/nodes/Node.java","method":"absUrl","pos":143,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":138,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Node.java","method":"Node","pos":278,"doc":"/** \n * Instantiates a new node.\n * @param type node type: Node.ROOT_NODE | Node.DOCTYPE_TAG | Node.COMMENT_TAG | Node.PROC_INS_TAG | Node.TEXT_NODE |Node.START_TAG | Node.END_TAG | Node.START_END_TAG | Node.CDATA_TAG | Node.SECTION_TAG | Node. ASP_TAG | Node.JSTE_TAG | Node.PHP_TAG | Node.XML_DECL\n * @param textarray array of bytes contained in the Node\n * @param start start position\n * @param end end position\n * @param element tag name\n * @param tt tag table instance\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.3.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"constructUrl","pos":918,"doc":"/** \n * Build a URL from the link and base provided.\n * @param link The (relative) URI.\n * @param base The base URL of the page, either from the &lt;BASE&gt; tagor, if none, the URL the page is being fetched from.\n * @param strict If <code>true<\/code> a link starting with '?' is handledaccording to <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396<\/a>, otherwise the common interpretation of a query appended to the base is used instead.\n * @return An absolute URL.\n * @exception MalformedURLException If creating the URL fails.\n */\n"},{"file_path":"dataset/net/sourceforge/nekohtml/nekohtml/1.9.15/org/cyberneko/html/HTMLTagBalancer.java","method":"startElement","pos":549,"doc":"/** \n * Start element. \n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":138,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":151,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printSlide","pos":2592,"doc":"/** \n * Called from printTree to print the content of a slide from the node slidecontent. On return slidecontent points to the node starting the next slide or null. The variables slide and count are used to customise the navigation bar.\n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/util/Translate.java","method":"decode","pos":738,"doc":"/** \n * Decode a string containing references. Change all numeric character reference and character entity references to unicode characters.\n * @param string The string to translate.\n * @param list If non-null on input, this list is populated with the offsetsof translated entities - hence this will always contain an even number of Integer elements, the start and end index of the original character reference.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"discardContainer","pos":625,"doc":"/** \n * Used to strip font start and end tags.\n * @param element original node\n * @param pnode passed in as array to allow modification. pnode[0] will contain the final node\n * @todo remove the pnode parameter and make it a return value\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"parseJsp","pos":1387,"doc":"/** \n * Parse a java server page node. Scan characters until \"%&gt;\" is encountered, or the input stream is exhausted, in which case <code>null<\/code> is returned.\n * @param start The position at which to start scanning.\n * @return The parsed node.\n * @exception ParserException If a problem occurs reading from the source.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.1b/org/jsoup/nodes/Node.java","method":"absUrl","pos":125,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":143,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"}]}