{"filter":1,"results":[{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"insertProperty","pos":107,"doc":"/** \n * Insert a css style property.\n * @param props StyleProp instance\n * @param name property name\n * @param value property value\n * @return StyleProp containin the given property\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"createProps","pos":168,"doc":"/** \n * Create sorted linked list of properties from style string.\n * @param prop StyleProp\n * @param style style string\n * @return StyleProp with given style\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"createStyleElement","pos":513,"doc":"/** \n * Create style element using rules from dictionary.\n * @param lexer Lexer\n * @param doc root node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"getCDATA","pos":1742,"doc":"/** \n * Create a text node for the contents of a CDATA element like style or script which ends with &lt;/foo> for some foo.\n * @param container container node\n * @return cdata node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"cleanBodyAttrs","pos":384,"doc":"/** \n * Move presentation attribs from body to style element. <pre> background=\"foo\" . body { background-image: url(foo) } bgcolor=\"foo\" . body { background-color: foo } text=\"foo\" . body { color: foo } link=\"foo\" . :link { color: foo } vlink=\"foo\" . :visited { color: foo } alink=\"foo\" . :active { color: foo } <\/pre>\n * @param lexer Lexer\n * @param body body node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Lexer.java","method":"getToken","pos":1902,"doc":"/** \n * Gets a token.\n * @param mode one of the following:<ul> <li><code>MixedContent<\/code>-- for elements which don't accept PCDATA<\/li> <li><code>Preformatted<\/code>-- white spacepreserved as is<\/li> <li><code>IgnoreMarkup<\/code>-- for CDATA elements such as script, style<\/li> <\/ul>\n * @return next Node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"center2Div","pos":1078,"doc":"/** \n * Symptom: <pre> &lt;center> <\/pre>. <p> Action: replace <code>&lt;center><\/code> by <code>&lt;div style=\"text-align: center\"><\/code> <\/p>\n * @param lexer Lexer\n * @param node center tag\n * @param pnode pnode[0] is the same as node, passed in as an array to allow modification\n * @return <code>true<\/code> if a center tag has been replaced by a div\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"inlineStyle","pos":1380,"doc":"/** \n * If the node has only one b, i, or font child remove the child node and add the appropriate style attributes to parent.\n * @param lexer Lexer\n * @param node parent node\n * @param pnode passed as an array to allow modifications\n * @return <code>true<\/code> if child node has been stripped, replaced by style attributes.\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/PPrint.java","method":"printScriptStyle","pos":1837,"doc":"/** \n * Print script and style elements. For XHTML, wrap the content as follows: <pre> JavaScript: //&lt;![CDATA[ content //]]> VBScript: '&lt;![CDATA[ content ']]> CSS: /*&lt;![CDATA[* / content /*]]>* / other: &lt;![CDATA[ content ]]> <\/pre>\n * @param fout\n * @param mode\n * @param indent\n * @param lexer\n * @param node\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"blockStyle","pos":1298,"doc":"/** \n * Symptom: the only child of a block-level element is a presentation element such as B, I or FONT. Action: add style \"font-weight: bold\" to the block and strip the &lt;b>element, leaving its children. example: <pre> &lt;p> &lt;b>&lt;font face=\"Arial\" size=\"6\">Draft Recommended Practice&lt;/font>&lt;/b> &lt;/p> <\/pre> becomes: <pre> &lt;p style=\"font-weight: bold; font-family: Arial; font-size: 6\"> Draft Recommended Practice &lt;/p> <\/pre> <p> This code also replaces the align attribute by a style attribute. However, to avoid CSS problems with Navigator 4, this isn't done for the elements: caption, tr and table <\/p>\n * @param lexer Lexer\n * @param node parent node\n * @return <code>true<\/code> if the child node has been removed\n */\n"}]}