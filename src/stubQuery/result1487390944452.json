{"filter":1,"results":[{"file_path":"dataset/org/jsoup/jsoup/1.3.2/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.3.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Lexer.java","method":"main","pos":1697,"doc":"/** \n * Mainline for command line operation\n * @param args [0] The URL to parse.\n * @exception MalformedURLException If the provided URL cannot be resolved.\n * @exception ParserException If the parse fails.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"constructUrl","pos":918,"doc":"/** \n * Build a URL from the link and base provided.\n * @param link The (relative) URI.\n * @param base The base URL of the page, either from the &lt;BASE&gt; tagor, if none, the URL the page is being fetched from.\n * @param strict If <code>true<\/code> a link starting with '?' is handledaccording to <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396<\/a>, otherwise the common interpretation of a query appended to the base is used instead.\n * @return An absolute URL.\n * @exception MalformedURLException If creating the URL fails.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.0/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":138,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/net/sf/jtidy/jtidy/r938/org/w3c/tidy/Clean.java","method":"cleanBodyAttrs","pos":384,"doc":"/** \n * Move presentation attribs from body to style element. <pre> background=\"foo\" . body { background-image: url(foo) } bgcolor=\"foo\" . body { background-color: foo } text=\"foo\" . body { color: foo } link=\"foo\" . :link { color: foo } vlink=\"foo\" . :visited { color: foo } alink=\"foo\" . :active { color: foo } <\/pre>\n * @param lexer Lexer\n * @param body body node\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/tags/ImageTag.java","method":"extractImageLocn","pos":71,"doc":"/** \n * Extract the location of the image Given the tag (with attributes), and the url of the html page in which this tag exists, perform best effort to extract the 'intended' URL. Attempts to handle such attributes as: <pre> &lt;IMG SRC=http://www.redgreen.com&gt; - normal &lt;IMG SRC =http://www.redgreen.com&gt; - space between attribute name and equals sign &lt;IMG SRC= http://www.redgreen.com&gt; - space between equals sign and attribute value &lt;IMG SRC = http://www.redgreen.com&gt; - space both sides of equals sign <\/pre>\n * @return The relative URL for the image.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/beans/LinkBean.java","method":"extractLinks","pos":86,"doc":"/** \n * Internal routine to extract all the links from the parser.\n * @return A list of all links on the page as URLs.\n * @exception ParserException If the parse fails.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/Parser.java","method":"main","pos":806,"doc":"/** \n * The main program, which can be executed from the command line.\n * @param args A URL or file name to parse, and an optional tag name to beused as a filter.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"append","pos":337,"doc":"/** \n * Append the given URL to the queue. Adds the url only if it isn't already in the queue, and notifys listeners about the addition.\n * @param url The url to add.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.4.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.3.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":251,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.3/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"fetch","pos":993,"doc":"/** \n * Fetch images. Ask the toolkit to make the image from a URL, and add a tracker to handle it when it's received. Add details to the rquested and tracked lists and update the status bar.\n * @param images The list of images to fetch.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.4.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/WikiCapturer.java","method":"main","pos":117,"doc":"/** \n * Mainline to capture a web site locally.\n * @param args The command line arguments.There are three arguments the web site to capture, the local directory to save it to, and a flag (true or false) to indicate whether resources such as images and video are to be captured as well. These are requested via dialog boxes if not supplied.\n * @exception MalformedURLException If the supplied URL is invalid.\n * @exception IOException If an error occurs reading the pages or resources.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"main","pos":1287,"doc":"/** \n * Mainline.\n * @param args the command line arguments.Can be one or more forms of -help to get command line help, or a URL to prime the program with. Checks for JDK 1.4 and if not found runs in crippled mode (no ThumbelinaFrame).\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/ThumbelinaFrame.java","method":"updateMRU","pos":799,"doc":"/** \n * Updates the user preferences based on the most recently used list.\n * @param url The URL that is to be placed at the top of the MRU list.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":151,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"extractImageLinks","pos":754,"doc":"/** \n * Get the links of an element of a document. Only gets the links on IMG elements that reference another image. The latter is based on suffix (.jpg, .gif and .png).\n * @param lexer The fully conditioned lexer, ready to rock.\n * @param docbase The url to read.\n * @return The URLs, targets of the IMG links;\n * @exception IOException If the underlying infrastructure throws it.\n * @exception ParserException If there is a problem parsing the url.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/http/ConnectionManager.java","method":"openConnection","pos":826,"doc":"/** \n * Opens a connection based on a given string. The string is either a file, in which case <code>file://localhost<\/code> is prepended to a canonical path derived from the string, or a url that begins with one of the known protocol strings, i.e. <code>http://<\/code>. Embedded spaces are silently converted to %20 sequences.\n * @param string The name of a file or a url.\n * @return The connection.\n * @exception ParserException if the string is not a valid url or file.\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/SiteCapturer.java","method":"main","pos":746,"doc":"/** \n * Mainline to capture a web site locally.\n * @param args The command line arguments.There are three arguments the web site to capture, the local directory to save it to, and a flag (true or false) to indicate whether resources such as images and video are to be captured as well. These are requested via dialog boxes if not supplied.\n * @exception MalformedURLException If the supplied URL is invalid.\n * @exception IOException If an error occurs reading the page or resources.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"writeObject","pos":372,"doc":"/** \n * Serialize the page. There are two modes to serializing a page based on the connected state. If connected, the URL and the current offset is saved, while if disconnected, the underling source is saved.\n * @param out The object stream to store this object in.\n * @exception IOException If there is a serialization problem.\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/lexer/Page.java","method":"setConnection","pos":516,"doc":"/** \n * Set the URLConnection to be used by this page. Starts reading from the given connection. This also resets the current url.\n * @param connection The connection to use.It will be connected by this method.\n * @exception ParserException If 1)the <code>connect()<\/code> method fails or 2)an I/O error occurs opening the input stream or  3)the character set designated in the HTTP header is unsupported or or 4)URL used to create the connection object supplied is not in the right form or syntax \n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":138,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.2/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.3/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.1.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Sequencer.java","method":"random","pos":106,"doc":"/** \n * Compute a random point to load the image. Generate a random point for one of the corners of the image and then condition the numbers so the image is on screen.\n * @param url The url this picture was fetched from.Used in computing the random position, so the picture is always placed in the same location, even when refetched.\n * @param width The width of the image.\n * @param height The height of the image.\n * @return The random point to use.\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/beans/StringBean.java","method":"setStrings","pos":313,"doc":"/** \n * Fetch the URL contents. Only do work if there is a valid parser with it's URL set.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.3/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":128,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.1.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":126,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/beans/FilterBean.java","method":"setNodes","pos":176,"doc":"/** \n * Fetch the URL contents and filter it. Only do work if there is a valid parser with it's URL set.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.0/org/jsoup/nodes/Node.java","method":"absUrl","pos":143,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/htmllexer/2.1/org/htmlparser/http/ConnectionManager.java","method":"openConnection","pos":547,"doc":"/** \n * Opens a connection using the given url.\n * @param url The url to open.\n * @return The connection.\n * @exception ParserException if an i/o exception occurs accessing the url.\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"Thumbelina","pos":251,"doc":"/** \n * Creates a new instance of Thumbelina.\n * @param url URL to enter into the 'to follow' list.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.2/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/beans/BeanyBaby.java","method":"actionPerformed","pos":135,"doc":"/** \n * Handles UI events. Changing the URL in the text field, altering a checkbox setting or choosing a menu item winds up here, where the appropriate change is made to the state of the bean.\n * @param event Details about the action.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.1/org/jsoup/nodes/Node.java","method":"absUrl","pos":143,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>). <p/> E.g.: <code>String absUrl = linkEl.absUrl(\"href\");<\/code> <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix, e.g.:<code>String absUrl = linkEl.attr(\"abs:href\");<\/code>\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/thumbelina/2.1/org/htmlparser/lexerapplications/thumbelina/Thumbelina.java","method":"run","pos":1061,"doc":"/** \n * The main processing loop. Pull suspect URLs off the queue one at a time, fetch and parse it, request images and enqueue further links.\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/WikiCapturer.java","method":"isToBeCaptured","pos":55,"doc":"/** \n * Returns <code>true<\/code> if the link is one we are interested in.\n * @param link The link to be checked.\n * @return <code>true<\/code> if the link has the source URL as a prefixand doesn't contain '?' or '#'; the former because we won't be able to handle server side queries in the static target directory structure and the latter because presumably the full page with that reference has already been captured previously. This performs a case insensitive comparison, which is cheating really, but it's cheap.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.1b/org/jsoup/nodes/Node.java","method":"absUrl","pos":125,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.1b/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":251,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/htmlparser/htmlparser/2.1/org/htmlparser/sax/XMLReader.java","method":"parse","pos":552,"doc":"/** \n * Parse an XML document from a system identifier (URI). <p>This method is a shortcut for the common case of reading a document from a system identifier.  It is the exact equivalent of the following:<\/p> <pre> parse(new InputSource(systemId)); <\/pre> <p>If the system identifier is a URL, it must be fully resolved by the application before it is passed to the parser.<\/p>\n * @param systemId The system identifier (URI).\n * @exception org.xml.sax.SAXException Any SAX exception, possiblywrapping another exception.\n * @exception java.io.IOException An IO exception from the parser,possibly from a byte stream or character stream supplied by the application.\n * @see #parse(org.xml.sax.InputSource)\n */\n"},{"file_path":"dataset/org/htmlparser/sitecapturer/2.1/org/htmlparser/parserapplications/SiteCapturer.java","method":"decode","pos":347,"doc":"/** \n * Unescape a URL to form a file name. Very crude.\n * @param raw The escaped URI.\n * @return The native URI.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.5.1/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":252,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.2.3/org/jsoup/nodes/Node.java","method":"absUrl","pos":128,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.3.2/org/jsoup/nodes/Node.java","method":"absUrl","pos":136,"doc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href><\/code> or <code>&lt;img src><\/code>. <p/> If the attribute value is already absolute (i.e. it starts with a protocol, like <code>http://<\/code> or <code>https://<\/code> etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's  {@link #baseUri}, and made absolute using that. <p/> As an alternate, you can use the  {@link #attr} method with the <code>abs:<\/code> prefix.\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n"},{"file_path":"dataset/org/htmlparser/filterbuilder/2.1/org/htmlparser/parserapplications/filterbuilder/FilterBuilder.java","method":"makeProgram","pos":687,"doc":"/** \n * Makes a program like: <pre> // Generated by FilterBuilder. http://htmlparser.org // [aced0005737200206f72672e68746d6c7061727365722e66696c746572732e416e6446696c74657224c30516b2b7b2120200015b000b6d5072656469636174657374001c5b4c6f72672f68746d6c7061727365722f4e6f646546696c7465723b78707572001c5b4c6f72672e68746d6c7061727365722e4e6f646546696c7465723b8f17479b1d5f7992020000787000000002737200246f72672e68746d6c7061727365722e66696c746572732e5461674e616d6546696c746572b28b2601a614890f0200014c00056d4e616d657400124c6a6176612f6c616e672f537472696e673b78707400044d455441737200296f72672e68746d6c7061727365722e66696c746572732e48617341747472696275746546696c74657296abdfb3b0714cda0200024c000a6d41747472696275746571007e00064c00066d56616c756571007e000678707400046e616d6570] import org.htmlparser.*; import org.htmlparser.filters.*; import org.htmlparser.beans.*; import org.htmlparser.util.*; public class Test { public static void main (String args[]) { TagNameFilter filter0 = new TagNameFilter (); filter0.setName (\"META\"); HasAttributeFilter filter1 = new HasAttributeFilter (); filter1.setAttributeName (\"name\"); NodeFilter[] array0 = new NodeFilter[2]; array0[0] = filter0; array0[1] = filter1; AndFilter filter2 = new AndFilter (); filter2.setPredicates (array0); NodeFilter[] array1 = new NodeFilter[1]; array1[0] = filter2; FilterBean bean = new FilterBean (); bean.setFilters (array1); if (0 != args.length) { bean.setURL (args[0]); System.out.println (bean.getNodes ().toHtml ()); } else System.out.println (\"Usage: java -classpath .:htmlparser.jar:htmllexer.jar Test <url>\"); } } <\/pre>\n * @param name The name of the class. \n * @param out The buffer to append to.\n * @param bean The bean to extract the filters from to make the program.\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/1.6.2/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":273,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"},{"file_path":"dataset/org/jsoup/jsoup/0.2.2/org/jsoup/safety/Whitelist.java","method":"addProtocols","pos":251,"doc":"/** \n * Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to URLs with the defined protocol. <p/> E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")<\/code>\n * @param tag       Tag the URL protocol is for\n * @param key       Attribute key\n * @param protocols List of valid protocols\n * @return this, for chaining\n */\n"}]}